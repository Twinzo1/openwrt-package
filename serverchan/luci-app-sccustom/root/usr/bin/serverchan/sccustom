#!/bin/sh

alias DATE="date '+%A %Y-%m-%d %H:%M:%S'"
NAME="sccustom"
LOGFILE="/tmp/serverchan/custom.log"
line=`wc -l $LOGFILE | awk -F " " '{print $1}'`
[ $line -ge 1000 ] && echo "日志超过一千行，清除日志" > $LOGFILE

# 重新定义config_get
config_get(){
	local var
	local num="$3"
	var=$(uci get $NAME.@$1[$num].$2 2>/dev/null)
	echo ${var}
}

uci_get_by_type() {
	local total=`uci show 2>/dev/null | grep $NAME.@"$1" | grep -w "=$1" | sed '/^$/!h;$!d;g' | awk -F "[" '{print $2}' | awk -F "]" '{print $1}'`
	echo "$total"
}

#########################USAGE###########################
# config_get_global(){									#
# 	total=`uci_get_by_type $cfg`						#
# 	while [[ $total -ge 0 ]]							#
# 	do													#		
#	 	enable=`config_get "$cfg" enable $total`		#
# 		comments=`config_get "$cfg" comment $total`		#
# 		total=$((total-1))								#
# 	done												#
# }														#				
# config_get_global										#
#########################################################

function isDate(){ ##判断2020-02-31日期是否为有效日期
	local val="$1"
	yearstr=`echo $val | awk -F "-" '{print $1}'` 
	monthstr=$(expr `echo $val | awk -F "-" '{print $2}'` + 0)
	daystr=$(expr `echo $val | awk -F "-" '{print $3}'` + 0)

	function get_days_in_month(){ ##返回每个月的最大天数
		local year="$yearstr"
		local month="$monthstr"
		leap4=`expr $year % 4`
		leap100=`expr $year % 100`
		leap400=`expr $year % 400`
		local day=30
		local days=30
		Even=`expr $month % 2`
		[ "$leap4" -eq 0 -a "$leap100" -ne 0 -o "$leap400" -eq 0 ] && days=`expr $days + 1`
		[ $month = 7 ] && echo $((++day)) && return
		[ $month = 2 ] && echo $((days - 2)) && return
		[ "$month" -lt 7 ] && ([ "$Even" -eq 0 ] && echo $day  || echo $((++day))) && return
		[ "$month" -gt 6 ] && ([ "$Even" -eq 0 ] && echo $((++day)) || echo $day)
	}
	
	isdate=`get_days_in_month $yearstr $ monthstr`
	[ "$daystr" -le "$isdate" ] && echo "1" || echo "0"
}

#农历当天时间
function ccal_date(){
	now_day=$(expr `date '+%d'` + 0)
	month=`/sbin/ccal -x | grep 'value="$now_day"' | awk -F " " '{print $3}' | awk -F "\"" '{print $2}'`
	day=`/sbin/ccal -x | grep 'value="$now_day"' | awk -F " " '{print $5}' | awk -F "\"" '{print $2}'`
	tmpDate=`printf "%0.2d-%0.2d" "$month" "$day"` ##格式化输出
	echo "${tmpDate}"
}

#农历时间
ccal_day(){
	now_day=$(expr `date '+%d'` + 0)
	month=`/sbin/ccal -x | grep value='"'$now_day'"' | awk -F " " '{print $6}' | awk -F "\"" '{print $2}'`
	day=`/sbin/ccal -x | grep value='"'$now_day'"' | awk -F " " '{print $7}' | awk -F "\"" '{print $2}'`
	echo "${month}${day}"
}
# 获取第二天的日期
function nextDate(){
	local month=`expr "date '+%m'" + 0`
	local nextday, valid_date
	local day=`expr "date '+%d'" + 0`
	local lunar="$1"
	nextday=`expr "$day" + 1`
	year=$(expr `date +%Y` + 0)
	valid_date=`isDate ${year}-${month}-${nextday}`
	[ $valid_date != 1 ] && month=`expr $month + 1` && nextday=1
	[ $month = 13 ] && month=1 && year=`expr year + 1`
	
	if [ "$lunar" = "1" ]; then
		month=`/sbin/ccal -x "$month" "$year" | grep 'value="$nextday"' | awk -F " " '{print $3}' | awk -F "\"" '{print $2}'`
		nextday=`/sbin/ccal -x "$month" "$year" | grep 'value="$nextday"' | awk -F " " '{print $5}' | awk -F "\"" '{print $2}'`		 
	fi
	nextdate=`printf "%0.2d-%0.2d" "$month" "$nextday"`
	echo "$nextdate"
}

# 判断文件是否存在，防止重名
function isExist(){
	local file="$1"
	[ -f "$file" ] && (file="${file}1"  && file=`isExist ${file}`) || echo "$file"
}

# 检测当天或第二天是否有任务
function today_cron(){ ##usage: sccustom today_cron vacation/birthday early/late
	local cfg="$1"
	local quan="$2"
	config_get_quantum(){
		total=`uci_get_by_type $cfg`
		while [[ $total -ge 0 ]]
		do
			enable=`config_get "$cfg" enable $total`
			[ "$enable" -ne "cfg" ] && break
			time=`config_get "$cfg" time $total`
			hour=$(expr `echo $time | awk -F ":" '{print $1}'` + 0)
			if [ "$quan" = "early" ]; then
				if [ ${hour} -gt 4 ]; then 
					break #凌晨四点之后由late处理
				else
					send_date=`config_get "$cfg" date $total`
					lunar=`config_get "$cfg" lunar $total`
					next_date=$(nextDate "$lunar")
					[ "$send_date" != "$next_date" ] && break
				fi
			else
				if [ ${hour} -le 4 ];then
					break	#凌晨四点之前由early处理
				else
					send_date=`config_get "$cfg" date $total`
					lunar=`config_get "$cfg" lunar $total`
					[ "$lunar" != 1 ] && now_date=`date '+%m-%d'` || now_date=$(ccal_date)
					[ "$send_date" != "$now_date" ] && break
				fi
			fi
			minu=`echo $time | awk -F ":" '{print $2}'`
			send_title=`config_get "$cfg" send_title $total`
			messages=`config_get "$cfg" messages $total`
			messText=`isExist "/etc/serverchan/${quan}${hour}${minu}"`
			echo ${send_title} > "${messText}title"
			echo \`\`\` > "${messText}body"
			if [ "$lunar" = "1" ]; then
				[ "$1" = "birthday" ] && echo "TA的生日是以农历`ccal_day`为准的" >> "${messText}body"
				[ "$1" = "vacation" ] && echo "这个节日是以农历`ccal_day`为准的" >> "${messText}body"
			fi
			echo "----------" >> "${messText}body"
			echo ${messages} >> "${messText}body"
			echo \`\`\` >> "${messText}body"
			echo "$minu $hour * * * /usr/bin/serverchan/sccustom send $messText #sccustom ${quan}" >> /etc/crontabs/root
			total=$((total-1))
		done
	}
	rm -f /etc/serverchan/${quan}*
	sed -i "/#sccustom ${quan}/d" /etc/crontabs/root
	config_get_quantum
	[ "$1" = "birthday" ] && echo "`DATE`：生日推送初始化成功" >> $LOGFILE
	[ "$1" = "vacation" ] && echo "`DATE`：节日推送初始化成功" >> $LOGFILE
}

#日常推送
function daliy_life(){
	local cfg="daliylife"
	config_get_daliy(){
		total=`uci_get_by_type $cfg`
		while [[ $total -ge 0 ]]
		do
			enable=`config_get "$cfg" enable $total`
			[ "$enable" -ne "1" ] && break
			week=`config_get "$cfg" daysofweek $total`
			time=`config_get "$cfg" time $total`
			hour=$(expr `echo $time | awk -F ":" '{print $1}'` + 0)
			minu=`echo $time | awk -F ":" '{print $2}'`
			send_title=`config_get "$cfg" send_title $total`
			messages=`config_get "$cfg" messages $total`
			messText=`isExist "/etc/serverchan/daliylife${hour}${minu}"`
			echo ${send_title} > "${messText}title"
			echo \`\`\` > "${messText}body"
			echo ${messages} >> "${messText}body"
			echo \`\`\` >> "${messText}body"
			echo "$minu $hour ${week:-*} * * /usr/bin/serverchan/sccustom send $messText #sccustom daliylife" >> /etc/crontabs/root
			total=$((total-1))
		done
	}
	rm -f /etc/serverchan/daliylife*
	sed -i "/#sccustom daliylife/d" /etc/crontabs/root
	config_get_daliy
	echo "`DATE`：日常推送初始化成功" >> $LOGFILE
	/etc/init.d/cron stop
	/etc/init.d/cron start
}

# 检测网络状态
function check()
{
	tries=0
	echo --- my_watchdog start ---
	while [[ $tries -lt 2 ]]
	do
		if /bin/ping -c 1 223.5.5.5 >/dev/null
		then
			echo 1
			return 
		fi
		tries=$((tries+1))
		sleep 1
	done
	echo 0
}

# 发送信息
function send(){
	local cfg="global"
	local title=`cat "${1}title"`
	local send_title="【${title}】"
	local send_date=`/sbin/ccal -u | grep 月 |  grep 日 | sed 's/^[ \t]*//'`
	local content=`cat "${1}body"`
	local ccalDay=`ccal_day`
	local ChineseCalendar="---%0D%0A%0D%0A>####农历：\n>\`\`\`\n当前日期：${ccalDay}\n>下个月：${send_date}\n"
	local send_content="`echo -e ${ChineseCalendar}`%0D%0A%0D%0A---%0D%0A%0D%0A>####正文：%0D%0A%0D%0A>${content}"
	local nowtime=`DATE`
	echo "`DATE`：标题：$send_title" >> $LOGFILE
	echo "`DATE`：正文：$send_content" >> $LOGFILE
	[ "$(check)" = 0 ] && echo "`DATE`：网络未连接" >> $LOGFILE && exit 0
	echo "`DATE`：初始化成功" >> $LOGFILE
	config_get_global(){
		total=`uci_get_by_type $cfg`
		while [[ $total -ge 0 ]]
		do
			enable=`config_get "$cfg" enable $total`
			[ "$enable" -ne "1" ] && break
			serverchan_sckey=`config_get "$cfg" sckey $total`
			[ -z "$serverchan_sckey" ] && break
			comments=`config_get "$cfg" comment $total`
			curl -s "http://sc.ftqq.com/$serverchan_sckey.send?text=${send_title}" -d "&desp=${nowtime}%0D%0A%0D%0A${send_content}" >/dev/null
			echo "`DATE`：消息发送成功给${comments}" >> $LOGFILE
			total=$((total-1))
		done
	}
	config_get_global
}

case "$1" in
	"today_cron" )
		today_cron "$2" "$3";;
	"daliy_life" )
		daliy_life;;
	"send")
		send "$2";;
	*)
		echo "`DATE`：参数错误" >> $LOGFILE ;;
esac
		